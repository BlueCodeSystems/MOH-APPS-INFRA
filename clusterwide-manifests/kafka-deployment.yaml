#Sets up cluster wide Zookeeper and Kafka
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: zookeeper-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 12Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: kafka-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-svc-1
  labels: 
    app: zookeeper-app
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  selector:
    app: zookeeper-app-1
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels: 
    app: kafka-app
spec:
  ports:
  - port: 9092
    name: int-port
  - port: 9094
    name: ext-port
  selector:
    app: kafka-app
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-client-service
  labels: 
    app: zookeeper-client-service
spec:
  ports:
  - port: 2181
    name: client-port
  selector:
    app: zookeeper-app-1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper-app-1
spec:
  selector:
    matchLabels:
      app: zookeeper-app
  serviceName: zookeeper-svc-1
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper-app
    spec:
      containers:
      - name: zookeeper-container
        image: zookeeper:3.6.1
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZOO_MY_ID
          value: "1"
        volumeMounts: 
        - name: zookeeper-persistent-storage
          mountPath: /var/lib/zookeeper
      volumes:
      - name: zookeeper-persistent-storage
        persistentVolumeClaim:
          claimName: zookeeper-pv-claim
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-app
spec:
  selector:
    matchLabels:
      app: kafka-app
  serviceName: kafka-svc
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka-app
    spec:
      containers:
      - name: kafka-container
        image: wurstmeister/kafka:2.12-2.4.1
        ports:
        - containerPort: 9092
          name: int-port
        - containerPort: 9094
          name: ext-port
        env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: kafka-svc
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-client-service:2181"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
        - name: KAFKA_LISTENERS
          value: "INSIDE://:9092,OUTSIDE://:9094"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INSIDE://:9092,OUTSIDE://:0.0.0.0:9094"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INSIDE"
        volumeMounts: 
        - name: kafka-persistent-storage
          mountPath: /kafka
      volumes:
      - name: kafka-persistent-storage
        persistentVolumeClaim:
          claimName: kafka-pv-claim

